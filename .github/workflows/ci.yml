name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize]

permissions: {}

jobs:
  build:
    # l10nbot does not affect dev scripts.
    if: ${{ github.actor != 'l10nbot' }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 2

      - name: Enable Corepack
        shell: bash
        working-directory: ${{ inputs.cwd }}
        run: |
          corepack enable
          echo "corepack enabled"

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Expose pnpm config(s) through "$GITHUB_OUTPUT"
        id: pnpm-config
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache rotation keys
        id: cache-rotation
        shell: bash
        run: |
          echo "YEAR_MONTH=$(/bin/date -u "+%Y%m")" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-config.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-cache-${{ steps.cache-rotation.outputs.YEAR_MONTH }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-cache-${{ steps.cache-rotation.outputs.YEAR_MONTH }}-

      - name: Setup Node.js 18 environment
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "pnpm" # https://github.com/actions/setup-node/blob/main/docs/advanced-usage.md#caching-packages-dependencies

      - run: pnpm install
      - run: pnpm build
        env:
          NODE_OPTIONS: --max_old_space_size=4096
      - run: pnpm typescript
        env:
          NODE_OPTIONS: --max-old-space-size=3072

      - name: Lint
        if: matrix.os == 'ubuntu-latest'
        run: pnpm lint

      - name: Danger
        run: pnpm danger ci
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.DANGER_GITHUB_API_TOKEN }}
