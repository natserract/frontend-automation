name: Release Changesets

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

jobs:
  build:
    name: Production builds
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/pnpm-install
      - run: pnpm build
        env:
          NODE_OPTIONS: --max_old_space_size=4096

  release:
    needs: [build]
    strategy:
      max-parallel: 1
      matrix:
        channel:
          - latest
          - dev

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main # Always checkout main even for tagged releases
          fetch-depth: 0
          token: ${{ secrets.GH_ACCESS_TOKEN }}
      - uses: ./.github/actions/dangerous-git-checkout
      - uses: ./.github/actions/pnpm-install

      - name: Release to @dev channel
        if: matrix.channel == 'dev'
        run: |
          pnpm version:snapshot
          pnpm run publish:beta
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Publish
        if: matrix.channel == 'latest'
        run: |
          pnpm run publish

      - name: Push tags
        if: matrix.channel == 'latest'
        run: |
          # Have to set a git config for the merge to work
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          pnpm push-tags
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Create release pull request
        uses: changesets/action@v1
        if: matrix.channel == 'latest'
        with:
          version: pnpm run version
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
