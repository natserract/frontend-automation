name: publish
on:
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      max-parallel: 1
      matrix:
        channel:
          - latest
          - dev

    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install packages
        uses: ./.github/actions/pnpm-install

      - run: pnpm build
        env:
          NODE_OPTIONS: --max_old_space_size=4096

      - name: Tests TypeScript definitions
        run: pnpm typescript
        env:
          NODE_OPTIONS: --max-old-space-size=4096

      ##- name: Set NPMRC
      ## run: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" > .npmrc
      ## env:
      ## NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Release to @dev channel
        if: matrix.channel == 'dev'
        run: |
          pnpm version:snapshot
          pnpm run publish:beta

      - name: Publish
        if: matrix.channel == 'latest'
        run: |
          pnpm run publish

      - name: Push tags
        if: matrix.channel == 'latest'
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          pnpm push-tags
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
          # NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Create release pull request
        uses: changesets/action@v1
        if: matrix.channel == 'latest'
        with:
          version: pnpm run version
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
